# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low

{{% for path in FILEPATH %}}
{{% if IS_DIRECTORY %}}
{{% if FILE_REGEX %}}

- name: Find {{{ path }}} file(s) matching {{{ FILE_REGEX[loop.index0] }}}{{% if RECURSIVE %}} recursively{{% endif %}}

  find:
    paths: "{{{ path }}}"
    patterns: {{{ FILE_REGEX[loop.index0] }}}
    use_regex: yes
{{% if RECURSIVE %}}
    recurse: yes
{{% endif %}}
    hidden: yes
  register: files_found

- name: Ensure group owner on {{{ path }}} file(s) matching {{{ FILE_REGEX[loop.index0] }}}
  file:
    path: "{{ item.path }}"
    group: "{{{ FILEGID }}}"
    state: file
  when: item.gid != {{{ FILEGID }}}
  with_items:
    - "{{ files_found.files }}"

{{% else %}}

- name: Ensure group owner on {{{ path }}}{{% if RECURSIVE %}} recursively{{% endif %}}
  file:
    path: "{{{ path }}}"
    state: directory
{{% if RECURSIVE %}}
    recurse: yes
{{% endif %}}
    group: "{{{ FILEGID }}}"

{{% endif %}}
{{% else %}}

- name: Test for existence {{{ path }}}
  stat:
    path: "{{{ path }}}"
  register: file_exists

- name: Ensure group owner {{{ FILEGID }}} on {{{ path }}}
  file:
    path: "{{{ path }}}"
    group: "{{{ FILEGID }}}"
  when: file_exists.stat is defined and file_exists.stat.exists

{{% endif %}}
{{% endfor %}}
